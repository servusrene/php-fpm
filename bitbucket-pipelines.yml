image: atlassian/default-image:2

pipelines:
  default:
    - parallel:
        - step:
            name: Build and Test
            script:
              - IMAGE_NAME=$BITBUCKET_REPO_SLUG
              - VERSION=7.3
              - FODLER=./
              - docker build . --file "${FOLDER}Dockerfile" --build-arg PHP_VERSION=${VERSION} --tag "${IMAGE_NAME}:${VERSION}"
            services:
              - docker
            caches:
              - docker
        - step:
            name: Lint the Dockerfile
            image: hadolint/hadolint:latest-debian
            script:
              - hadolint --ignore DL3008 --ignore DL3022 Dockerfile
  branches:
    master:
      - parallel:
        - step:
            name: PHP 7.3
            script:
              - IMAGE_NAME=$BITBUCKET_REPO_SLUG
              - VERSION=7.3
              - IMAGE=${DOCKER_REPOSITORY}/docker/${IMAGE_NAME}
              - docker build . --build-arg PHP_VERSION=${VERSION} --tag "${IMAGE}:${VERSION}"
              - docker build ./development --build-arg PHP_VERSION=${VERSION} --tag "${IMAGE}-dev:${VERSION}"
              - docker build ./production --build-arg PHP_VERSION=${VERSION} --tag "${IMAGE}-prod:${VERSION}"
              - echo ${DOCKER_PASSWORD} | docker login ${DOCKER_REPOSITORY} --username "${DOCKER_USERNAME}" --password-stdin
              - docker push "${IMAGE}:${VERSION}"
              - docker push "${IMAGE}-dev:${VERSION}"
              - docker push "${IMAGE}-prod:${VERSION}"
            services:
              - docker
            caches:
              - docker
        - step:
            name: PHP 7.4
            script:
              - IMAGE_NAME=$BITBUCKET_REPO_SLUG
              - VERSION=7.4
              - IMAGE=${DOCKER_REPOSITORY}/docker/${IMAGE_NAME}
              - docker build . --build-arg PHP_VERSION=${VERSION} --tag "${IMAGE}:${VERSION}"
              - docker build ./development --build-arg PHP_VERSION=${VERSION} --tag "${IMAGE}-dev:${VERSION}"
              - docker build ./production --build-arg PHP_VERSION=${VERSION} --tag "${IMAGE}-prod:${VERSION}"
              - echo ${DOCKER_PASSWORD} | docker login ${DOCKER_REPOSITORY} --username "${DOCKER_USERNAME}" --password-stdin
              - docker push "${IMAGE}:${VERSION}"
              - docker push "${IMAGE}-dev:${VERSION}"
              - docker push "${IMAGE}-prod:${VERSION}"
            services:
              - docker
            caches:
              - docker
        - step:
            name: PHP 8.0
            script:
              - IMAGE_NAME=$BITBUCKET_REPO_SLUG
              - VERSION=8.0
              - IMAGE=${DOCKER_REPOSITORY}/docker/${IMAGE_NAME}
              - docker build . --build-arg PHP_VERSION=${VERSION} --tag "${IMAGE}:${VERSION}"
              - docker build ./development --build-arg PHP_VERSION=${VERSION} --tag "${IMAGE}-dev:${VERSION}"
              - docker build ./production --build-arg PHP_VERSION=${VERSION} --tag "${IMAGE}-prod:${VERSION}"
              - echo ${DOCKER_PASSWORD} | docker login ${DOCKER_REPOSITORY} --username "${DOCKER_USERNAME}" --password-stdin
              - docker push "${IMAGE}:${VERSION}"
              - docker push "${IMAGE}-dev:${VERSION}"
              - docker push "${IMAGE}-prod:${VERSION}"
            services:
              - docker
            caches:
              - docker