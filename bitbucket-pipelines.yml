image: atlassian/default-image:2

pipelines:
  default:
    - parallel:
        - step:
            name: Build and Test
            script:
              - IMAGE_NAME=$BITBUCKET_REPO_SLUG
              - VERSION=7.3
              - FODLER=./
              - docker build . --file "${FOLDER}Dockerfile" --build-arg PHP_VERSION=${VERSION} --tag "${IMAGE_NAME}:${VERSION}"
            services:
              - docker
            caches:
              - docker
        - step:
            name: Lint the Dockerfile
            image: hadolint/hadolint:latest-debian
            script:
              - hadolint Dockerfile
  branches:
    master:
      - parallel:
        - step:
            name: Build 7.3 default
            script:
              - IMAGE_NAME=$BITBUCKET_REPO_SLUG
              - VERSION=7.3
              - FODLER=./
              - SUFFIX=
              - docker build . --file "${FOLDER}Dockerfile" --build-arg PHP_VERSION=${VERSION} --tag "${IMAGE_NAME}${SUFFIX}:${VERSION}"
              - docker save ${IMAGE_NAME} --output "${IMAGE_NAME}${SUFFIX}-${VERSION}.tar"
            services:
              - docker
            caches:
              - docker
            artifacts:
              - "*.tar"
        - step:
            name: Build 7.4 default
            script:
              - IMAGE_NAME=$BITBUCKET_REPO_SLUG
              - VERSION=7.4
              - FODLER=./
              - SUFFIX=
              - docker build . --file "${FOLDER}Dockerfile" --build-arg PHP_VERSION=${VERSION} --tag "${IMAGE_NAME}${SUFFIX}:${VERSION}"
              - docker save ${IMAGE_NAME} --output "${IMAGE_NAME}${SUFFIX}-${VERSION}.tar"
            services:
              - docker
            caches:
              - docker
            artifacts:
              - "*.tar"
        - step:
            name: Build 8.0 default
            script:
              - IMAGE_NAME=$BITBUCKET_REPO_SLUG
              - VERSION=8.0
              - FODLER=./
              - SUFFIX=
              - docker build . --file "${FOLDER}Dockerfile" --build-arg PHP_VERSION=${VERSION} --tag "${IMAGE_NAME}${SUFFIX}:${VERSION}"
              - docker save ${IMAGE_NAME} --output "${IMAGE_NAME}${SUFFIX}-${VERSION}.tar"
            services:
              - docker
            caches:
              - docker
            artifacts:
              - "*.tar"
      - parallel:
          - step:
              name: Build 7.3 Dev
              script:
                - IMAGE_NAME=$BITBUCKET_REPO_SLUG
                - VERSION=7.3
                - FODLER=./devlopment
                - SUFFIX=-dev
                - docker build . --file "${FOLDER}Dockerfile" --build-arg PHP_VERSION=${VERSION} --tag "${IMAGE_NAME}${SUFFIX}:${VERSION}"
                - docker save ${IMAGE_NAME} --output "${IMAGE_NAME}${SUFFIX}-${VERSION}.tar"
              services:
                - docker
              caches:
                - docker
              artifacts:
                - "*.tar"
          - step:
              name: Build 7.4 Dev
              script:
                - IMAGE_NAME=$BITBUCKET_REPO_SLUG
                - VERSION=7.4
                - FODLER=./development
                - SUFFIX=-dev
                - docker build . --file "${FOLDER}Dockerfile" --build-arg PHP_VERSION=${VERSION} --tag "${IMAGE_NAME}${SUFFIX}:${VERSION}"
                - docker save ${IMAGE_NAME} --output "${IMAGE_NAME}${SUFFIX}-${VERSION}.tar"
              services:
                - docker
              caches:
                - docker
              artifacts:
                - "*.tar"
          - step:
              name: Build 8.0 Dev
              script:
                - IMAGE_NAME=$BITBUCKET_REPO_SLUG
                - VERSION=8.0
                - FODLER=./development
                - SUFFIX=-dev
                - docker build . --file "${FOLDER}Dockerfile" --build-arg PHP_VERSION=${VERSION} --tag "${IMAGE_NAME}${SUFFIX}:${VERSION}"
                - docker save ${IMAGE_NAME} --output "${IMAGE_NAME}${SUFFIX}-${VERSION}.tar"
              services:
                - docker
              caches:
                - docker
              artifacts:
                - "*.tar"
          - step:
              name: Build 7.3 Prod
              script:
                - IMAGE_NAME=$BITBUCKET_REPO_SLUG
                - VERSION=7.3
                - FODLER=./production
                - SUFFIX=-prod
                - docker build . --file "${FOLDER}Dockerfile" --build-arg PHP_VERSION=${VERSION} --tag "${IMAGE_NAME}${SUFFIX}:${VERSION}"
                - docker save ${IMAGE_NAME} --output "${IMAGE_NAME}${SUFFIX}-${VERSION}.tar"
              services:
                - docker
              caches:
                - docker
              artifacts:
                - "*.tar"
          - step:
              name: Build 7.4 Prod
              script:
                - IMAGE_NAME=$BITBUCKET_REPO_SLUG
                - VERSION=7.4
                - FODLER=./production
                - SUFFIX=-prod
                - docker build . --file "${FOLDER}Dockerfile" --build-arg PHP_VERSION=${VERSION} --tag "${IMAGE_NAME}${SUFFIX}:${VERSION}"
                - docker save ${IMAGE_NAME} --output "${IMAGE_NAME}${SUFFIX}-${VERSION}.tar"
              services:
                - docker
              caches:
                - docker
              artifacts:
                - "*.tar"
          - step:
              name: Build 8.0 Prod
              script:
                - IMAGE_NAME=$BITBUCKET_REPO_SLUG
                - VERSION=8.0
                - FODLER=./production
                - SUFFIX=-prod
                - docker build . --file "${FOLDER}Dockerfile" --build-arg PHP_VERSION=${VERSION} --tag "${IMAGE_NAME}${SUFFIX}:${VERSION}"
                - docker save ${IMAGE_NAME} --output "${IMAGE_NAME}${SUFFIX}-${VERSION}.tar"
              services:
                - docker
              caches:
                - docker
              artifacts:
                - "*.tar"
      - parallel:
          - step:
              name: Deploy 7.3
              deployment: Production
              script:
                - IMAGE_NAME=$BITBUCKET_REPO_SLUG
                - VERSION=7.3
                - SUFIX=
                - IMAGE=${DOCKER_REPOSITORY}/docker/${IMAGE_NAME}${SUFFIX}
                - echo ${DOCKER_PASSWORD} | docker login ${DOCKER_REPOSITORY} --username "${DOCKER_USERNAME}" --password-stdin
                - docker load --input "${IMAGE_NAME}${SUFFIX}-${VERSION}.tar"
                - docker tag "${IMAGE_NAME}" "${IMAGE}:${VERSION}"
                - docker push "${IMAGE}:${VERSION}"
                - SUFIX=-dev
                - IMAGE=${DOCKER_REPOSITORY}/docker/${IMAGE_NAME}${SUFFIX}
                - docker load --input "${IMAGE_NAME}${SUFFIX}-${VERSION}.tar"
                - docker tag "${IMAGE_NAME}" "${IMAGE}:${VERSION}"
                - docker push "${IMAGE}:${VERSION}"
                - SUFIX=-prod
                - IMAGE=${DOCKER_REPOSITORY}/docker/${IMAGE_NAME}${SUFFIX}
                - docker load --input "${IMAGE_NAME}${SUFFIX}-${VERSION}.tar"
                - docker tag "${IMAGE_NAME}" "${IMAGE}:${VERSION}"
                - docker push "${IMAGE}:${VERSION}"
              services:
                - docker
          - step:
              name: Deploy 7.4
              deployment: Production
              script:
                - IMAGE_NAME=$BITBUCKET_REPO_SLUG
                - VERSION=7.4
                - SUFIX=
                - IMAGE=${DOCKER_REPOSITORY}/docker/${IMAGE_NAME}${SUFFIX}
                - echo ${DOCKER_PASSWORD} | docker login ${DOCKER_REPOSITORY} --username "${DOCKER_USERNAME}" --password-stdin
                - docker load --input "${IMAGE_NAME}${SUFFIX}-${VERSION}.tar"
                - docker tag "${IMAGE_NAME}" "${IMAGE}:${VERSION}"
                - docker push "${IMAGE}:${VERSION}"
                - SUFIX=-dev
                - IMAGE=${DOCKER_REPOSITORY}/docker/${IMAGE_NAME}${SUFFIX}
                - docker load --input "${IMAGE_NAME}${SUFFIX}-${VERSION}.tar"
                - docker tag "${IMAGE_NAME}" "${IMAGE}:${VERSION}"
                - docker push "${IMAGE}:${VERSION}"
                - SUFIX=-prod
                - IMAGE=${DOCKER_REPOSITORY}/docker/${IMAGE_NAME}${SUFFIX}
                - docker load --input "${IMAGE_NAME}${SUFFIX}-${VERSION}.tar"
                - docker tag "${IMAGE_NAME}" "${IMAGE}:${VERSION}"
                - docker push "${IMAGE}:${VERSION}"
              services:
                - docker
          - step:
              name: Deploy 8.0
              deployment: Production
              script:
                - IMAGE_NAME=$BITBUCKET_REPO_SLUG
                - VERSION=8.0
                - SUFIX=
                - IMAGE=${DOCKER_REPOSITORY}/docker/${IMAGE_NAME}${SUFFIX}
                - echo ${DOCKER_PASSWORD} | docker login ${DOCKER_REPOSITORY} --username "${DOCKER_USERNAME}" --password-stdin
                - docker load --input "${IMAGE_NAME}${SUFFIX}-${VERSION}.tar"
                - docker tag "${IMAGE_NAME}" "${IMAGE}:${VERSION}"
                - docker push "${IMAGE}:${VERSION}"
                - SUFIX=-dev
                - IMAGE=${DOCKER_REPOSITORY}/docker/${IMAGE_NAME}${SUFFIX}
                - docker load --input "${IMAGE_NAME}${SUFFIX}-${VERSION}.tar"
                - docker tag "${IMAGE_NAME}" "${IMAGE}:${VERSION}"
                - docker push "${IMAGE}:${VERSION}"
                - SUFIX=-prod
                - IMAGE=${DOCKER_REPOSITORY}/docker/${IMAGE_NAME}${SUFFIX}
                - docker load --input "${IMAGE_NAME}${SUFFIX}-${VERSION}.tar"
                - docker tag "${IMAGE_NAME}" "${IMAGE}:${VERSION}"
                - docker push "${IMAGE}:${VERSION}"
              services:
                - docker
