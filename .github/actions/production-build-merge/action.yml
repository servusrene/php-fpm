name: Production Build Merge
description: Merge single architecture images into multi-arch manifest
inputs:
  github_token:
    required: true
    description: 'Token for GitHub packages'
  repository:
    required: true
    description: 'Repository URL'
  image-variant:
    required: true
    description: 'Image variant (dev or prod)'
  image-version:
    required: true
    description: 'PHP version tag'
  is-latest:
    required: false
    description: 'Whether this is the latest PHP version (creates latest tag)'
    default: 'false'

runs:
  using: composite
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.github_token }}

    - name: Determine Image Name
      id: image
      shell: bash
      run: |
        # Determine image name based on variant
        case "${{ inputs.image-variant }}" in
          dev)
            echo "name=php-fpm-dev" >> $GITHUB_OUTPUT
            ;;
          prod)
            echo "name=php-fpm-prod" >> $GITHUB_OUTPUT
            ;;
          *)
            echo "‚ùå Invalid image-variant: ${{ inputs.image-variant }}"
            exit 1
            ;;
        esac

    - name: Create Multi-Arch Manifest
      shell: bash
      run: |
        # Create multi-arch manifest from permanent architecture-specific tags
        # The manifest references these tags, which hold the layers
        IMAGE_NAME="${{ steps.image.outputs.name }}"
        VERSION="${{ inputs.image-version }}"
        
        echo "üîó Creating multi-arch manifest for ${IMAGE_NAME}:${VERSION}..."
        
        # Create version-specific multi-arch tag
        docker buildx imagetools create \
          --tag ghcr.io/${{ github.repository_owner }}/${IMAGE_NAME}:${VERSION} \
          ghcr.io/${{ github.repository_owner }}/${IMAGE_NAME}:${VERSION}-amd64 \
          ghcr.io/${{ github.repository_owner }}/${IMAGE_NAME}:${VERSION}-arm64
        
        echo "‚úÖ Created multi-arch image: ghcr.io/${{ github.repository_owner }}/${IMAGE_NAME}:${VERSION}"
        
        # Create latest tag if this is the latest PHP version
        if [ "${{ inputs.is-latest }}" == "true" ]; then
          echo "üè∑Ô∏è  Creating latest tag for ${IMAGE_NAME}..."
          docker buildx imagetools create \
            --tag ghcr.io/${{ github.repository_owner }}/${IMAGE_NAME}:latest \
            ghcr.io/${{ github.repository_owner }}/${IMAGE_NAME}:${VERSION}-amd64 \
            ghcr.io/${{ github.repository_owner }}/${IMAGE_NAME}:${VERSION}-arm64
          
          echo "‚úÖ Created latest tag: ghcr.io/${{ github.repository_owner }}/${IMAGE_NAME}:latest"
        fi

