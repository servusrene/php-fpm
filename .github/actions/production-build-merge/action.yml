name: Production Build Merge
description: Merge single architecture images into multi-arch manifest
inputs:
  github_token:
    required: true
    description: 'Token for GitHub packages'
  repository:
    required: true
    description: 'Repository URL'
  image-variant:
    required: true
    description: 'Image variant (dev or prod)'
  image-version:
    required: true
    description: 'PHP version tag'

runs:
  using: composite
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.github_token }}

    - name: Determine Image Name
      id: image
      shell: bash
      run: |
        # Determine image name based on variant
        case "${{ inputs.image-variant }}" in
          dev)
            echo "name=php-fpm-dev" >> $GITHUB_OUTPUT
            ;;
          prod)
            echo "name=php-fpm-prod" >> $GITHUB_OUTPUT
            ;;
          *)
            echo "‚ùå Invalid image-variant: ${{ inputs.image-variant }}"
            exit 1
            ;;
        esac

    - name: Create Multi-Arch Manifest
      shell: bash
      run: |
        # Create multi-arch manifest from temporary architecture-specific images
        IMAGE_NAME="${{ steps.image.outputs.name }}"
        echo "üîó Creating multi-arch manifest for ${IMAGE_NAME}:${{ inputs.image-version }}..."
        
        docker buildx imagetools create \
          --tag ghcr.io/${{ github.repository_owner }}/${IMAGE_NAME}:${{ inputs.image-version }} \
          ghcr.io/${{ github.repository_owner }}/${IMAGE_NAME}:temp-${{ github.run_id }}-${{ inputs.image-version }}-amd64 \
          ghcr.io/${{ github.repository_owner }}/${IMAGE_NAME}:temp-${{ github.run_id }}-${{ inputs.image-version }}-arm64
        
        echo "‚úÖ Created multi-arch image: ghcr.io/${{ github.repository_owner }}/${IMAGE_NAME}:${{ inputs.image-version }}"

