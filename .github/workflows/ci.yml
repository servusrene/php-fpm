name: CI

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * */2'

env:
  REPOSITORY: ghcr.io
  IMAGE_NAME: clicksports/php-fpm

jobs:
  lint-dockerfile:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: "Dockerfile"
          ignore: DL3008,DL3022
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: "**/Dockerfile"
          recursive: true
          ignore: DL3008,DL3022

  build-php-base:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        version: [ '8.0', '8.1', '8.2' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REPOSITORY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Export
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          build-args: |
            PHP_VERSION=${{ matrix.version }}
          tags: ${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ matrix.version }}
          cache-from: type=gha,scope=${{ github.ref_name }}-${{ matrix.version }}
          cache-to: type=gha,mode=max,scope=${{ github.ref_name }}-${{ matrix.version }}

  build-push-php:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        version: [ '8.0', '8.1', '8.2' ]
        context: [ { tag: 'dev', path: './development' }, { tag: 'prod', path: './production' } ]
    needs: build-php-base
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REPOSITORY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.context.path }}
          push: true
          build-args: |
            PHP_VERSION=${{ matrix.version }}
          tags: ${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}-${{ matrix.context.tag }}:${{ matrix.version }}
          cache-from: type=gha,scope=${{ github.ref_name }}-${{ matrix.context.tag }}-${{ matrix.version }}
          cache-to: type=gha,mode=max,scope=${{ github.ref_name }}-${{ matrix.context.tag }}-${{ matrix.version }}
